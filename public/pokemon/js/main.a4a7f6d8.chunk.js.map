{"version":3,"sources":["Container/ball-icon.png","graphql/get-pokemon.js","Component/Pokemon.js","Component/Icon.js","Container/PokemonContainer.js","Component/search.js","App.js","index.js"],"names":["module","exports","GET_POKEMONS","gql","Pokemon","pokemon","focus","special","attacks","typeString","types","map","type","i","space","key","String","style","paddingLeft","focusId","className","id","name","maxHP","maxCP","src","image","alt","item","damage","Icon","xmlns","height","viewBox","width","d","fill","PokemonContainer","find","setFind","page","useQuery","variables","first","data","pokemons","e","parseInt","useState","isloading","setLoading","useEffect","document","getElementById","disabled","setTimeout","f","console","trace","preventScroll","length","ballIcon","onClick","x","Element","Finding","slice","index","Search","props","trans","setPage","temp","setTemp","value","onChange","event","target","placeholder","App","justifyContent","client","ApolloClient","uri","render"],"mappings":"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","file":"static/js/main.a4a7f6d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ball-icon.f3a75f76.png\";","import gql from 'graphql-tag'\n\nexport const GET_POKEMONS = gql`\n  query pokemons($first: Int!) {\n    pokemons(first: $first){\n      classification\n      id\n      name\n      image\n      maxHP\n      maxCP\n      types\n      attacks {\n        special {\n          name\n          damage\n          type\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nexport function Pokemon({pokemon, focus}){\n\n  const {special} = pokemon.attacks\n  const typeString = pokemon.types.map((type, i) => {\n    let space = \"1.5rem\"\n    if (i === 0) space = \"0.75rem\"\n    return (\n      <span key={type + String(i)}\n      style={ {paddingLeft: space} }>\n        {type}\n      </span>\n    )\n  })\n  const focusId = focus\n\n  return (\n    <div className=\"container\">\n      <button id={focusId} >\n        {pokemon.name}\n      </button>\n      <p>\n        {`HP: ${pokemon.maxHP}`}\n        <span style={ {paddingLeft: \"1rem\"} }>\n          {`CP : ${pokemon.maxCP}`}\n        </span>\n      </p>\n      <p>\n        <span>TYPES :</span>\n        {typeString}\n      </p>\n      <img className=\"image\" src={pokemon.image} alt=\"ops\" />\n      <br />\n      <div className=\"attacks\">\n        {special.map(item => (\n          <div className=\"special-attack\"\n            key={`${pokemon.name}-${item.name}`}>\n            <p>{item.name}</p>\n            <p>{item.damage}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nexport function Icon() {\n    return (\n        <div className=\"icon-button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"36\" viewBox=\"0 0 24 24\" width=\"36\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { GET_POKEMONS } from '../graphql/get-pokemon'\nimport {Pokemon} from '../Component/Pokemon'\nimport {Icon} from '../Component/Icon'\nimport ballIcon from './ball-icon.png'\n\nexport function PokemonContainer({find, setFind, page}){\n\n  const { data: { pokemons = [] } = {} } = useQuery(GET_POKEMONS, {\n    variables: { first: 151 }\n  })\n  const s = 0\n  const e = page === \"all\" ? 151 : parseInt(page)\n  const [isloading, setLoading] = useState(true)\n\n  useEffect(() => {\n    document.getElementById(\"select-display\")\n      .disabled = find === \"\" ? false : true\n    setLoading(true)\n    setTimeout(() => setLoading(false), 1000)\n  },[find, page])\n\n  useEffect(() => {\n    const f = document.getElementById(\"need-focus\")\n    if (null !== f) {\n      console.trace(\"focus\")\n      f.focus({preventScroll: false})\n    }\n  })\n\n  useEffect(() => {\n    pokemons.length === 0 ? setLoading(true) : setLoading(false)\n  },[pokemons])\n  \n  function Finding(x = find) {\n    for (let Element of pokemons) {\n      if (Element.name === x) {\n        return  <Pokemon pokemon={Element} />\n      }\n    }\n    return <p id=\"nothing-text\">Ops nothing found~~</p>\n  }\n\n  return (\n    <>\n     {\n       isloading ? \n        <img id=\"loading\" \n        src={ ballIcon }\n        alt=\"loading QQ\" /> :\n        find !== \"\" ? \n          <>\n            <button id=\"back-button\" onClick={\n              () => setFind(\"\")\n            }>\n              <Icon />\n            </button>\n            <div className=\"nothing-text-box\">\n              {Finding(find)}\n            </div>  \n          </>\n        :\n          pokemons.slice(s,e).map((item, index) => <Pokemon \n            key={item.id}\n            pokemon={item}\n            focus={index === e-1 ? \"need-focus\" : null}\n            />\n          )\n     }\n    </>\n  )\n}","import React, {useState} from 'react'\n\nexport function Search(props){\n  const {setFind, setPage} = props.trans\n  const [temp, setTemp] = useState(\"\")\n  \n  return (\n    <div className=\"search-box\">\n      <input id=\"insert\" name=\"findPokemon\" value={temp}\n        type=\"text\" onChange={event => setTemp(event.target.value)}\n        placeholder=\"type pokemon\"\n      />\n      <button id=\"click\" onClick={() => {\n        setFind(temp)\n      }}>\n        search\n      </button>\n      <select id=\"select-display\"\n      onChange={\n        e => setPage(e.target.value)\n      }>\n        <option value=\"5\">5</option>\n        <option value=\"15\">15</option>\n        <option value=\"30\">30</option>\n        <option value=\"50\">50</option>\n        <option value=\"70\">70</option>\n        <option value=\"90\">90</option>\n        <option value=\"110\">110</option>\n        <option value=\"130\">130</option>\n        <option value=\"all\">all</option>\n      </select>\n    </div>\n  )\n}","import React, {useState} from 'react'\nimport {PokemonContainer} from './Container/PokemonContainer'\nimport {Search} from './Component/search'\nimport './style.css'\n\nfunction App(){\n\n  const [find, setFind] = useState(\"\")\n  const [page, setPage] = useState(\"5\")\n\n  return (\n    <>\n      <nav>\n        <Search trans={{ setFind, setPage }} />\n      </nav>\n      <main style={\n        {\n          justifyContent: find !== \"\" ? \"center\" : \"space-around\"\n        }\n      }>\n        <PokemonContainer\n          find={find}\n          page={page}\n          setFind={setFind} />\n      </main>\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport {render} from 'react-dom'\nimport App from './App'\nimport ApolloClient from 'apollo-boost'\nimport {ApolloProvider} from '@apollo/react-hooks'\n\nconst client = new ApolloClient({\n    uri: 'https://graphql-pokemon.now.sh'\n  })\n\nrender(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>\n, document.getElementById('root'))"],"sourceRoot":""}